ğŸš€ ExercÃ­cio 1: Inspecione um documento para que vocÃª se familiarize com a estrutura. Entenda os atributos e os nÃ­veis existentes.
R: use("exercises-29-02");
db.superheroes.findOne();

ğŸš€ ExercÃ­cio 2: Selecione todos os super-herÃ³is com menos de 1.80m de altura. Lembre-se de que essa informaÃ§Ã£o estÃ¡ em centÃ­metros.
R: use("exercises-29-02");
db.superheroes.find({
  "aspects.height": {
    $lt: 185
  }
});

ğŸš€ ExercÃ­cio 3: Retorne o total de super-herÃ³is menores que 1.80m.
R: use("exercises-29-02");
db.superheroes.countDocuments({
  "aspects.height": {
    $lt: 180
  }
});

ExercÃ­cio 4: Retorne o total de super-herÃ³is com atÃ© 1.80m.
R: use("exercises-29-02");
db.superheroes.countDocuments({
  "aspects.height": {
    $lte: 180
  }
});

ExercÃ­cio 5: Selecione um super-herÃ³i com 2.00m ou mais de altura.
R: use("exercises-29-02");
db.superheroes.findOne({
  "aspects.height": {
    $gte: 200
  }
});

ExercÃ­cio 6: Retorne o total de super-herÃ³is com 2.00m ou mais.
R: use("exercises-29-02");
db.superheroes.countDocuments({
  "aspects.height": {
    $gte: 200
  }
});

ExercÃ­cio 7: Selecione todos os super-herÃ³is que tÃªm olhos verdes.
R: use("exercises-29-02");
db.superheroes.find({
  "aspects.eyeColor": "green"
});

ExercÃ­cio 8: Retorne o total de super-herÃ³is com olhos azuis.
R: use("exercises-29-02");
db.superheroes.countDocuments({
  "aspects.eyeColor": "blue"
});

ğŸš€ ExercÃ­cio 9: Utilizando o operador $in, selecione todos os super-herÃ³is com cabelos pretos ou carecas ("No Hair").
R: use("exercises-29-02");
db.superheroes.find({
  "aspects.hairColor": {
    $in: ["black", "No Hair"]
  }
});

ExercÃ­cio 10: Retorne o total de super-herÃ³is com cabelos pretos ou carecas ("No Hair").
R: use("exercises-29-02");
db.superheroes.countDocuments({
  "aspects.hairColor": {
    $in: ["black", "No Hair"]
  }
});

ExercÃ­cio 11: Retorne o total de super-herÃ³is que nÃ£o tenham cabelos pretos ou nÃ£o sejam carecas.
R: use("exercises-29-02");
db.superheroes.countDocuments({
  "aspects.hairColor": {
    $nin: ["black", "No Hair"]
  }
});

ğŸš€ ExercÃ­cio 12: Utilizando o operador $not, retorne o total de super-herÃ³is que nÃ£o tenham mais de 1.80m de altura.
R: use("exercises-29-02");
db.superheroes.countDocuments({
  "aspects.height": {
    $not: {
      $gt: 180
    }
  }
});

ExercÃ­cio 13: Selecione todos os super-herÃ³is que nÃ£o sejam humanos nem sejam maiores do que 1.80m.
R: use("exercises-29-02");
db.superheroes.countDocuments({
  $nor: [
    { race: "Human" },
    { "aspects.height": { $gt: 180 } }
  ]
});

ExercÃ­cio 14: Selecione todos os super-herÃ³is com 1.80m ou 2.00m de altura e que sejam publicados pela Marvel Comics.
R: db.superheroes.find({
  $and: [
    { $or: [
      { "aspects.height": 180 },
      { "aspects.height": 200 }
    ] },
    {
      publisher: "Marvel Comics"
    }
  ]
});

ExercÃ­cio 15: Selecione todos os super-herÃ³is que pesem entre 80kg e 100kg, sejam Humanos ou Mutantes e nÃ£o sejam publicados pela DC Comics.
R: use("exercises-29-02");
db.superheroes.countDocuments({
  $and: [
    { "aspects.weight": { $gte: 80, $lte: 100 } },
    { race: { $in: ["Human", "Mutant"] } },
    { publisher: { $not: { $eq: "DC Comics" } } }
  ]
});

ExercÃ­cio 16: Retorne o total de documentos que nÃ£o contÃªm o campo race.
R: use("exercises-29-02");
db.superheroes.countDocuments({
  race: { $exists: 0 }
});

ExercÃ­cio 17: Retorne o total de documentos que contÃªm o campo hairColor.
R: use("exercises-29-02");
db.superheroes.countDocuments({
  "aspects.hairColor": { $exists: 1 }
});

ExercÃ­cio 18: Remova apenas um documento publicado pela Sony Pictures.
R: use("exercises-29-02");
db.superheroes.deleteOne({
  publisher: "Sony Pictures"
})

ğŸš€ ExercÃ­cio 19: Remova todos os documentos publicados pelo George Lucas.
R: use("exercises-29-02");
db.superheroes.deleteMany(
  { publisher: "George Lucas" }
)
