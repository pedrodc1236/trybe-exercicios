Praticando GROUP BY

1. Monte uma query que exiba a quantidade de clientes cadastrados na tabela sakila.customer que estão ativos e a quantidade que estão inativos.
R: SELECT active, COUNT(active)
FROM customer
GROUP BY active;

2. Monte uma query para a tabela sakila.customer que exiba a quantidade de clientes ativos e inativos por loja. Os resultados devem conter o ID da loja, o status dos clientes (ativos ou inativos) e a quantidade de clientes por status.
R: SELECT store_id, active, COUNT(*)
FROM customer
GROUP BY store_id, active;

3. Monte uma query que exiba a média de duração de locação por classificação indicativa (rating) dos filmes cadastrados na tabela sakila.film. Os resultados devem ser agrupados pela classificação indicativa e ordenados da maior média para a menor.
R: SELECT rating, AVG(rental_duration) AS `avg_rental_duration`
FROM film
GROUP BY rating
ORDER BY avg_rental_duration DESC;

4. Monte uma query para a tabela sakila.address que exiba o nome do distrito e a quantidade de endereços registrados nele. Os resultados devem ser ordenados da maior quantidade para a menor.
R: SELECT district, COUNT(address) AS `quantidade de endereços`
FROM address
GROUP BY district 
ORDER BY `quantidade de endereços` DESC;

Para fixar

1. Usando a query a seguir, modifique-a de forma que exiba apenas as durações médias que estão entre 115.0 a 121.50. Além disso, dê um alias (apelido) à coluna gerada por AVG(length), de forma que deixe a query mais legível. Finalize ordenando os resultados de forma decrescente.
    SELECT rating, AVG(length)
    FROM sakila.film
    GROUP BY rating;
R:  
    SELECT rating, AVG(length) AS `durações médias`
    FROM sakila.film
    GROUP BY rating
    HAVING `durações médias` BETWEEN 115.0 AND 121.50
    ORDER BY `durações médias` DESC;

2. Usando a query a seguir, exiba apenas os valores de total do custo de substituição que estão acima de $3950.50. Dê um alias que faça sentido para SUM(replacement_cost), de forma que deixe a query mais legível. Finalize ordenando os resultados de forma crescente.
R:  SELECT rating, SUM(replacement_cost) AS `total do custo de substituição`
    FROM sakila.film
    GROUP by rating
    HAVING `total do custo de substituição` > 3950.50
    ORDER BY 3950.50;
