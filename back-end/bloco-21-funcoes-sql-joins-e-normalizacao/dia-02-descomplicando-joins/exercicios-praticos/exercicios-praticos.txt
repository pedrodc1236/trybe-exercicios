ExercÃ­cio 1: Utilizando o INNER JOIN, encontre as vendas nacionais (domestic_sales) e internacionais (international_sales) de cada filme.
R: USE pixar;
SELECT m.title, bo.domestic_sales, bo.international_sales
FROM movies AS m
INNER JOIN box_office AS bo
ON  m.id = bo.movie_id;

ðŸš€ ExercÃ­cio 2: Utilizando o INNER JOIN, faÃ§a uma busca que retorne o nÃºmero de vendas para cada filme que possui um nÃºmero maior de vendas internacionais (international_sales) do que vendas nacionais (domestic_sales).
R: USE pixar;
SELECT m.title, (b.domestic_sales + b.international_sales) AS `VENDAS`
FROM movies AS m
INNER JOIN box_office AS b
ON b.movie_id = m.id
WHERE b.international_sales > b.domestic_sales;

ðŸš€ ExercÃ­cio 3: Utilizando o INNER JOIN, faÃ§a uma busca que retorne os filmes e sua avaliaÃ§Ã£o (rating) em ordem decrescente.
R: USE pixar;
SELECT m.title AS `Filme`, b.rating AS `AvaliaÃ§Ã£o`
FROM movies AS m
INNER JOIN box_office AS b
ON b.movie_id = m.id
ORDER BY b.rating DESC;

ExercÃ­cio 4: Utilizando o LEFT JOIN, faÃ§a uma busca que retorne todos os dados dos cinemas, mesmo os que nÃ£o possuem filmes em cartaz e, adicionalmente, os dados dos filmes que estÃ£o em cartaz nestes cinemas. Retorne os nomes dos cinemas em ordem alfabÃ©tica.
R: USE pixar;
 SELECT 
	th.name,
    th.location,
    m.title,
    m.director,
    m.year,
    m.length_minutes
FROM theater AS th
LEFT JOIN movies AS m
ON th.id = m.theater_id
ORDER BY name ASC;

ExercÃ­cio 5: Utilizando o RIGHT JOIN, faÃ§a uma busca que retorne todos os dados dos filmes, mesmo os que nÃ£o estÃ£o em cartaz e, adicionalmente, os dados dos cinemas que possuem estes filmes em cartaz. Retorne os nomes dos cinemas em ordem alfabÃ©tica.
R: USE pixar;
SELECT 
	th.id,
    th.name,
    th.location,
    m.title,
    m.director,
    year,
    length_minutes
FROM theater AS th
RIGHT JOIN movies AS m
ON m.id = th.id
ORDER BY th.name ASC;

BÃ´nus

ðŸš€ ExercÃ­cio 6: Utilizando o INNER JOIN, selecione todas as informaÃ§Ãµes dos filmes que estÃ£o em cartaz (possuem theater_id diferente de NULL) com avaliaÃ§Ã£o maior que 8.
R: USE pixar;

SELECT * FROM box_office;
SELECT * FROM movies;
SELECT * FROM theater;

SELECT
	m.title,
    m.director,
    m.year,
    m.length_minutes,
    m.theater_id
FROM movies AS m
INNER JOIN box_office AS b
ON m.id = b.movie_id
WHERE b.rating > 8 AND m.theater_id IS NOT NULL;
